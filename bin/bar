#!/bin/bash
# d w m  bar
# took from github.com/mitchweaver/bin
# heavily modified some base aspects to fit my style

# on exit, kill all children
trap 'pkill -P $$' EXIT
LC_ALL=""

init() {
    # get colors
    source $HOME/var/cache/tm/colors/colors.sh
    
    colordetails=$color7
    colordetailsbg=$color0
    colorwsbg=$color0
    colorws=$color8
    colorwscurrent=$color15
    colorwindowname=$color7
    colorwindownamebg=$color0

    [ -d /tmp/bar ] && rm -rf /tmp/bar
    mkdir -p /tmp/bar
    touch /tmp/bar/ram
    touch /tmp/bar/cpu
    # wait for dwm to start
    while ! pgrep dwm > /dev/null ; do
        sleep 0.1
    done

    # if zero, bar is disabled
    [ $(< /tmp/dwm_info/bar_height) -eq 0 ] && exit

    echo 1 > /tmp/dwm_info/check

    num_ws=$(< /tmp/dwm_info/num_ws)

    res="$(xrandr --nograb --current | awk '/\*/ {print $1}')"
    res=${res% *}
    sw=${res%x*}
    sh=${res#*x}
    sw=${sw%.*}
    sh=${sh%.*}

    bar_gaps=$(< /tmp/dwm_info/bar_gaps)
    [ $bar_gaps -eq 1 ] && gap=$(< /tmp/dwm_info/gappx) || gap=0
    [ $bar_gaps -eq 1 ] && borpx=$(< /tmp/dwm_info/borderpx)
    
    w=$(echo "$sw - $gap * 2" | bc -l)
    h=$(< /tmp/dwm_info/bar_height)
    [ $bar_gaps -eq 1 ] && x=$gap || x=0

    if [ $(< /tmp/dwm_info/top_bar) -eq 0 ] ; then
        [ $gap -gt 0 ] && 
            y=$(( $gap )) ||
            y=0

    else
        [ $gap -gt 0 ] &&
            y=$( echo "$sh - $h - $gap" | bc -l ) ||
            y=$(( $sh - $h ))
    fi
    
    ft1="TerminessTTF Nerd Font:size=9"
    ft2="ShureTechMono Nerd Font:size=9"
    ft3="dina:size=6"
    ft4="scientifica:style=bold:size=8"
    ft5="TerminessTTF Nerd Font:size=8"

	# get the current volume
	bash $HOME/bin/vol -i 10

    unset res sw sh gap tmp
}

layout() {
    case $(< /tmp/dwm_info/current_layout) in
        0) echo -en "\\ufa6f" ;; # tiled
        1) echo -en "\\ue28e" ;; # floating
        2) echo -en "\\uf6a1" ;; # monocle
        3) echo -en "\\uf0c9" ;; # bstack 
        4) echo -en "\\uf04c" ;; # deck 
        5) echo -en "\\ufb87" ;; # center master
        6) echo -en "\\ue62e" ;; # spiral 
        7) echo -en "\\uf306" ;; # dwindle 
    esac 2> /dev/null
} 

wksp() {
    if [ $(< /tmp/dwm_info/check) -eq 1 ] ; then
        i=1
        while [ $i -le $num_ws ]; do
            wkspicon=$(( $i - 1 ))
            [ $(< /tmp/dwm_info/ws"$i") -eq 1 ] &&
                ws="%{B$colorwsbg} %{T1}%{F$colorwscurrent}$wkspicon%{F-}%{T-} %{B-}" ||
                ws="%{B$colorwsbg} %{T1}%{F$colorws}$wkspicon%{T-}%{F-} %{B-}"

            [ $(< /tmp/dwm_info/current_ws) -eq $i ] &&
                ws="%{B$colorwsbg}%{+o} %{T1}%{B$colorwsbg}%{F$colorwscurrent}$wkspicon%{F-}%{T-} %{B-}%{-o}" ||
                ws="%{-o}$ws"
            buffer=$buffer$ws

            i=$(( i + 1 ))
        done
        echo -n "$buffer" > /tmp/bar/wksp
        echo -n 0 > /tmp/dwm_info/check
    fi 2> /dev/null
}

focused_window() {
    cwin="$(xdotool getactivewindow getwindowname)"

    case "$cwin" in
        *Firefox*)
            cwin="$(echo "$cwin" | sed -e 's/ - Mozilla Firefox//')"
            cwin="ff: "$cwin""
    esac

    lencwin=${#cwin}
    if (( $lencwin > 80 )); then
        win=${cwin:0:50} 
        formatname="%{T3}%{F$colorwindowname}%{B$colorwindownamebg} $win... %{F-}%{B-}%{T-}"
    elif [ -n "$cwin" ]; then
        formatname="%{T3}%{F$colorwindowname}%{B$colorwindownamebg} $cwin %{F-}%{B-}%{T-}"
    elif [ -z "$cwin" ]; then
        formatname=""
    fi
    echo $formatname
}

launch_daemons() {
	# time_daemon
    dash -c 'while date "+%H:%M" > /tmp/bar/time
            do sleep 59
    done' > /dev/null 2>&1 &
   
    # date_daemon
    bash -c 'while true; do
        cur_month="$(date +%b)"
        cur_month=${cur_month,*}
        cur_date="$(date +%d)"
        echo "$cur_month $cur_date" > /tmp/bar/date
        sleep 6000
    done' &

    # day_daemon
    dash -c 'while true; do
        case $(date +%u) in
            1) echo mo > /tmp/bar/day;;
            2) echo tu > /tmp/bar/day;;
            3) echo we > /tmp/bar/day;;
            4) echo th > /tmp/bar/day;;
            5) echo fr > /tmp/bar/day;;
            6) echo sa > /tmp/bar/day;;
            7) echo su > /tmp/bar/day;;
        esac
        sleep 6000
    done' &

    # ram and cpu usage daemon
    python $HOME/bin/usage &

    # weather_daemon
    dash -c 'while true; do
        curl -s https://wttr.in/chennai?m0TQP > /tmp/bar/raw_weather
        [ -z $(cat /tmp/bar/raw_weather) ] && continue
        temp="$(head -n 2 /tmp/bar/raw_weather | grep -oe "[0-9]")"
        temp=$(echo "$temp" | head -n 2 | tr -d "\n")
        echo "   weather $(( $temp + 273 ))K" > /tmp/bar/weather
        sleep 300
    done' &
}

init
launch_daemons

while \
    printf " %s%b%s%b%b%b%b%b%b%s \\n" \
    "%{B$colordetailsbg}  %{T4}%{F$colordetails}$(< /tmp/bar/day)     "\
        "\ue28e%{F-}%{T-}   "\
        "  $(wksp)$(< /tmp/bar/wksp)" \
        "%{c}$(focused_window)" \
        "$(< /tmp/bar/temp)" \
        "%{r}%{B$colordetailsbg}  %{T1}%{F$colordetails}ram $(< /tmp/bar/ram)"\
        "$(</tmp/bar/weather)"\
        "   vol $(< /tmp/bar/vol)   $(< /tmp/bar/time)   "\
        "$(< /tmp/bar/date)%{T-}%{F-}  %{B-}"
    do sleep 0.5
done 2> /dev/null | \

lemonbar -db \
         -f "$ft1" \
         -f "$ft2" \
         -f "$ft3" \
         -f "$ft4" \
         -f "$ft5" \
         -g ${w}x${h}+${x}+${y} \
         -n bar \
         -u 2 \
         -U $color5 \
         -B $color0 \
         -F $color7 \
         -r "$borpx" \
         -R $color5 > /dev/null 2>&1
