#!/bin/bash
#
# http://github.com/mitchweaver/bin
#
# the unholy lemonbar
# edited to fit The_Human's dwm. changed layouts' symbol and cleared gaps

# on exit, kill all children
trap 'pkill -P $$' EXIT
LC_ALL=""

init() {

    colordetails="#d3d8de"
    colordetailsbg="#2b2c2b"
    colorwsbg="#2b2c2b"
    colorws="#d3d8de"
    colorwscurrent="#c9ced6"
    colorwindowname="#d3d8de"
    colorwindownamebg="#2b2c2b"

    [ -d /tmp/bar ] && rm -rf /tmp/bar
    mkdir -p /tmp/bar
    touch /tmp/bar/ram
    touch /tmp/bar/cpu
    # wait for dwm to start
    while ! pgrep dwm > /dev/null ; do
        sleep 0.1
    done

    # if zero, bar is disabled
    [ $(< /tmp/dwm_info/bar_height) -eq 0 ] && exit

    echo 1 > /tmp/dwm_info/check

    num_ws=$(< /tmp/dwm_info/num_ws)

    res="$(xrandr --nograb --current | awk '/\*/ {print $1}')"
    res=${res% *}
    sw=${res%x*}
    sh=${res#*x}
    sw=${sw%.*}
    sh=${sh%.*}

    gap=$(< /tmp/dwm_info/gappx)
    borpx=$(< /tmp/dwm_info/borderpx)
    w=$(( $sw - 500 ))
    x=$(( $sw / 2 - $w / 2 ))
    h=$(< /tmp/dwm_info/bar_height)
    #[ $gap -gt 0 ] && h=$(( $h + ($h / 4) ))

    if [ $(< /tmp/dwm_info/top_bar) -eq 0 ] ; then
        [ $gap -gt 0 ] && 
            y=$(( $gap )) ||
            y=0

    else
        [ $gap -gt 0 ] &&
            y=$(echo "$sh - $h - ($h / 2.5)" | bc -l) ||
            y=$(( $sh - $h ))
    fi
    
    if [ $gap -eq 0 ] ; then
        ft1="TerminessTTF Nerd Font:size=9"
        ft2="ShureTechMono Nerd Font:size=9"
        ft3="TerminessTTF Nerd Font:size=8"
        ft4="TerminessTTF Nerd Font:size=8"
        ft5="TerminessTTF Nerd Font:size=8"
    else
        ft1="TerminessTTF Nerd Font:size=9"
        ft2="ShureTechMono Nerd Font:size=9"
        ft3="TerminessTTF Nerd Font:size=8"
        ft4="TerminessTTF Nerd Font:size=8"
        ft5="TerminessTTF Nerd Font:size=8"
    fi
		# get the current volume
		bash $HOME/bin/vol +0%

    unset res sw sh gap tmp
}

layout() {
    case $(< /tmp/dwm_info/current_layout) in
        0) echo -en "\\uf570" ;; # tiled
        1) echo -en "\\ue28e" ;; # floating
        2) echo -en "\\uf6a1" ;; # monocle
        3) echo -en "\\uf0c9" ;; # bstack 
        4) echo -en "\\uf04c" ;; # deck 
        5) echo -en "\\ufb87" ;; # center master
        6) echo -en "\\ue62e" ;; # spiral 
        7) echo -en "\\uf306" ;; # dwindle 
    esac 2> /dev/null
} 

wksp() {
    if [ $(< /tmp/dwm_info/check) -eq 1 ] ; then
        for i in $(seq $num_ws || jot $num_ws) ; do
            wkspicon=$(( $i - 1 ))
            [ $(< /tmp/dwm_info/ws"$i") -eq 1 ] &&
                ws="%{B$colorwsbg} %{T1}$wkspicon%{T-} %{B-}" ||
                ws=""

            [ $(< /tmp/dwm_info/current_ws) -eq $i ] &&
                ws="%{B$colorwsbg} %{T1}%{B$colorwsbg}%{F$colorwscurrent}$wkspicon%{F-}%{T-} %{B-}" ||
                ws="$ws"
            buffer=$buffer$ws

        done
        echo -n "$buffer" > /tmp/bar/wksp
        echo -n 0 > /tmp/dwm_info/check
    fi 2> /dev/null
}

focused_window() {
    cwin="$(xdotool getactivewindow getwindowname)"
    lencwin=${#cwin}
    if (( $lencwin > 80 )); then
        win=${cwin:0:50} 
        formatname="%{T2}%{F$colorwindowname}%{B$colorwindownamebg} $win... %{F-}%{B-}%{T-}"
    elif [ -n "$cwin" ]; then
        formatname="%{T2}%{F$colorwindowname}%{B$colorwindownamebg} $cwin %{F-}%{B-}%{T-}"
    elif [ -z "$cwin" ]; then
        formatname=""
    fi
    echo $formatname
}

launch_daemons() {
		# time_daemon
    dash -c 'while date "+%H:%M" > /tmp/bar/date
        do sleep 59
    done' > /dev/null 2>&1 &
        
        # day_daemon
    dash -c 'while true; do
        case $(date +%u) in
            1) echo mo > /tmp/bar/day;;
            2) echo tu > /tmp/bar/day;;
            3) echo we > /tmp/bar/day;;
            4) echo th > /tmp/bar/day;;
            5) echo fr > /tmp/bar/day;;
            6) echo sa > /tmp/bar/day;;
            7) echo su > /tmp/bar/day;;
        esac
        sleep 6000
        done' &

        # ram and cpu usage daemon
    #python $HOME/bin/usage &
}

init
launch_daemons

while \
    printf " %s%b%s%b%b%b%b%b%b%s \\n" \
        "%{B$colordetailsbg}  %{T2}%{F$colordetails}$(< /tmp/bar/day)%{F-}%{T-}  " \
        "  $(wksp)$(< /tmp/bar/wksp)" \
        "%{c}%{F$colorwindowname}$(focused_window)%{F-}" \
        "$(< /tmp/bar/temp)" \
        "%{r}%{B$colordetailsbg}  %{T2}%{F$colordetails}$(< /tmp/bar/date)%{T-}%{F-}  %{B-}"
    do sleep 0.5
done 2> /dev/null | \

lemonbar -db \
         -f "$ft1" \
         -f "$ft2" \
         -f "$ft3" \
         -f "$ft4" \
         -f "$ft5" \
         -g ${w}x${h}+${x}+${y} \
         -n bar \
         -u 2 \
         -U "#fbd3da" \
         -B "#2b2c2b" \
         -F "#ffffff" \
         -r "$borpx" \
         -R "#cb93c6" \
-a 0 > /dev/null 2>&1
