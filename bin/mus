#!/bin/sh

[ -e /tmp/mussockname ] && {
	read -r sock </tmp/mussockname
} || sock=/tmp/mussock
cmd="socat - ${sock}"

fmt_song() {
	artist=${1%/*}
	echo "`echo ${artist##*/} | tr _ ' '` - `echo ${1##*/} | tr _ ' '`"
}

next() {
	echo '{"command":["playlist-next"]}' | ${cmd} >/dev/null
}

prev() {
	echo '{"command":["playlist-prev"]}' | ${cmd} >/dev/null
}

shuff() {
	echo '{"command":["playlist-shuffle"]}' | ${cmd} >/dev/null
}

# Since mpv does not have a loop input function (or none that I know of),
# this is a hack that presses L, which is the default bind for infinite loop.
loop() {
	echo '{"command":["keypress","L"]}' | ${cmd} >/dev/null
}

# Using loadfile does not continue with the playlist after the file
# ends and mpv quits too (?). 
# Following is a hacky "solution" to pause the current file and
# play another file and resume after the file ends.
# Potential non-hacky solution would be to use {audio,video}-add
# but figuring out the filetype of the file/url is a PITA
playnew() {
	playing=0
	f=${1:-`menu sel -p file/url: </tmp/musplist`}
	[ -z "${f}" ] && return 0
	is_playing && {
		pause
		playing=1
	}
	echo /tmp/tmpmsock >/tmp/mussockname
	mpv --input-ipc-server=/tmp/tmpmsock "${f}" &&
		rm -f /tmp/mussockname /tmp/tmpmsock
	[ ${playing} -eq 1 ] && pause
}

durstat() {
	dur=`echo '{"command":["get_property_string","duration"]}' | ${cmd}`
	[ -z "${dur}" ] && return 0
	dur="${dur##*\"data\":\"}"
	dur="${dur%%.*}"

	cur=`echo '{"command":["get_property_string","playback-time"]}' | ${cmd}`
	cur="${cur##*\"data\":\"}"
	cur="${cur%%.*}"

	echo $((cur/60)):$((cur%60))/$((dur/60)):$((dur%60))
}

curfile() {
	f=`echo '{"command":["get_property_string","path"]}' | ${cmd}`
	f="${f##*\"data\":\"}"
	echo "${f%%\"*}"
}

is_playing() {
	case `echo '{"command":["get_property","pause"]}' | ${cmd}` in
	*true*) return 1 ;;
	*)      return 0 ;;
	esac
}

pause() {
	stat=false
	is_playing && stat=true
	printf '{"command":["set_property","pause",%s]}\n' ${stat} | ${cmd} >/dev/null
}

quit() {
	echo '{"command":["quit"]}' | ${cmd} >/dev/null
	rm ${sock} /tmp/mussockname
}

perc() {
	perc=`echo '{"command":["get_property","percent-pos"]}' | ${cmd}`
	perc=${perc##*\"data\":}
	perc=${perc%%\"*}

	# Preserve only two decimal places
	echo ${perc%${perc#*.??}}
}

pprint() {
	[ -S ${sock} ] || {
		echo 'not playing!'
		exit 0
	}
	echo "playing: `fmt_song $(curfile)` (`perc`%)"
}

deadsock() {
	! :| ${cmd} 2>/dev/null
}

# trap 'quit' EXIT INT TERM KILL HUP

deadsock && quit

[ ! -S ${sock} ] && [ ${#} -eq 0 ] && {
	find ${HOME}/med/mus ! -name '*\.*' -type f >/tmp/musplist
	mpv --input-ipc-server=${sock} \
		--playlist=/tmp/musplist \
		--shuffle
	quit
	exit 0
}

if [ -z ${1} ]; then
	`echo 'pause\nnext\nprev\nloop\nshuff\nplaynew\nquit' | menu sel`
else
	g=${1}
	shift
	${g} ${@}
fi