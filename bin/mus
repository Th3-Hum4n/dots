#!/bin/sh

sock=/tmp/mussock
cmd="socat - ${sock}"

men() {
	echo 'pause\nnext\nprev\nloop\nshuff\nplaynew\nquit' | menu sel
}

fmt_song() {
	artist=${1%/*}
	echo "`echo ${artist##*/} | tr _ ' '` - `echo ${1##*/} | tr _ ' '`"
	unset artist
}

next() {
	echo '{"command":["playlist-next"]}' | ${cmd} >/dev/null
}

prev() {
	echo '{"command":["playlist-prev"]}' | ${cmd} >/dev/null
}

shuff() {
	echo '{"command":["playlist-shuffle"]}' | ${cmd} >/dev/null
}

loop() {
	# Since mpv does not have a loop input function (or none that I know of),
	# this is a hack that presses L, which is the default bind for infinite loop.
	echo '{"command":["keypress","L"]}' | ${cmd} >/dev/null
}

playnew() {
	# Using loadfile does not continue with the playlist after the file
	# ends and mpv quits too (?). 
	# Following is a hacky "solution" to pause the current file and
	# play another file and resume after the file ends.
	# Potential non-hacky solution would be to use {audio,video}-add
	# but figuring out the filetype of the file/url is a PITA
	f=`cat /tmp/musplist | menu sel`
	pause && mpv --no-audio-display "${f}" \
		--input-ipc-server=${sock} && pause

	unset f
}

durstat() {
	dur=`echo '{"command":["get_property_string","duration"]}' | ${cmd}`
	[ -z "${dur}" ] && return 0
	dur="${dur##*\"data\":\"}"
	dur="${dur%%.*}"

	cur=`echo '{"command":["get_property_string","playback-time"]}' | ${cmd}`
	cur="${cur##*\"data\":\"}"
	cur="${cur%%.*}"

	echo $((cur/60)):$((cur%60))/$((dur/60)):$((dur%60))
	unset cur dur
}

curfile() {
	f=`echo '{"command":["get_property_string","path"]}' | ${cmd}`
	f="${f##*\"data\":\"}"
	echo "${f%%\"*}"

	unset f
}

is_playing() {
	case `echo '{"command":["get_property","pause"]}' | ${cmd}` in
	*true*) exit 1 ;;
	esac
	return 0
}

pause() {
	stat=true
	case `echo '{"command":["get_property","pause"]}' | ${cmd}` in
	*true*) stat=false ;;
	esac
	printf '{"command":["set_property","pause",%s]}\n' ${stat} | ${cmd} >/dev/null

	unset stat
}

quit() {
	echo '{"command":["quit"]}' | ${cmd} >/dev/null
	rm ${sock} /tmp/musplist
}

perc() {
	perc=`echo '{"command":["get_property","percent-pos"]}' | ${cmd}`
	perc=${perc##*\"data\":}
	echo ${perc%%.*}
	unset perc
}

pprint() {
	[ -S ${sock} ] || {
		echo 'not playing!'
		exit 0
	}
	echo "playing: `fmt_song $(curfile)` (`perc`%)"
}

deadsock() {
	! :| ${cmd} 2>/dev/null
}

# trap 'quit' EXIT INT TERM KILL HUP

deadsock && quit

[ ! -S ${sock} ] && [ ${#} -eq 0 ] && {
	find ${HOME}/med/mus ! -name '*\.*' -type f >/tmp/musplist
	mpv --no-audio-display \
		--input-ipc-server=${sock} \
		--playlist=/tmp/musplist \
		--shuffle
	exit 0
}

if [ -z ${1} ]; then
	`men`
else
	f=${1}
	shift
	${f} ${@}
fi