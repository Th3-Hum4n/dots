#!/bin/ksh
alias a='alias'
a cmd='command'

find-font() {
    [[ ${1} ]] &&
        fc-list | grep -i "${1}"
}

mklatex() {
    local file
    for file; {
        xelatex "${file}"; rm -rf ${file%.tex}.{aux,out,log}
    }
}

c() {
    [[ ! ${1} ]] && { clear; return 0; }
    local p
    for p in "${@}" "${@}*" "*${@}" "*${@}*"; {
        if [[ -f "${p}" ]]; then
            cat "${p}"; return 0
        elif [[ -d "${p}" ]]; then
            cd "${p}"; return 0
        fi
    }
    echo 'error: no such file or dir' ${1}
}

v() {
    pgrep -x emacs > /dev/null && has emacsclient && {
        emacsclient -c "${@}" &
        return 0
    }

    vi "${@}"
}

resource() {
    . ${HOME}/etc/aliases

    case ${SHELL} {
    (*ksh*)  . ${HOME}/etc/kshrc   ;;
    (*)      . ${HOME}/etc/aliases ;;
    }
}

resxhkd() {
    pgrep -x sxhkd > /dev/null && pkill -9 sxhkd
    sxhkd -c ${HOME}/etc/xorg.d/sxhkdrc &
}

conf() {
    [[ ! -d ${HOME}/usr/repos/home ]] && return 0
    g() { git --git-dir=${HOME}/usr/repos/home --work-tree=${HOME}  "${@}"; }

    case ${1} {
    (commit) shift; g commit --interactive -m "${@}";;
    (push) g push origin master;;
    (list) g ls-tree -r HEAD --name-only | less;;
    (update-patches) g add ${HOME}/etc/prog.d/patches/*;;
    (*) g "${@}";;
    }

    unset -f g
}

has git && {
    git() {
        case ${1} {
        (ignore-get)
            wget -O gitignore https://raw.githubusercontent.com/github/gitignore/master/${2}.gitignore
            ;;
        (squash)
            local cnf
            read -r 'do you want to continue? ' cnf
            [[ "${cnf:0:1}" != 'y' ]] && return 0
            local n=${2}
            shift 2
            local msg="${@}"
            cmd git reset --soft HEAD~${n}
            cmd git commit -m "${msg}"
            ;;
        (add)
            [[ "${2}" = @(\.|\*) ]] && {
                echo no
                return 0
            }
            cmd git "${@}"
            ;;
        (com*)
            shift
            local fnl="${@}"
            [[ "${2}" = "-i" ]] && {
                shift
                fnl='${@} --interactive'
            }
            cmd git commit -m "${fnl}"
            ;;
        (clone)
            local fnl="${@}"
            [[ "${2}" = @(*vizs*) ]] && fnl="${@} --depth 1"
            cmd git ${fnl}
            ;;
        (*)
            cmd git "${@}"
            ;;
        }
    }
    a diff='cmd git diff'
}

has emacs && {
    remacs() {
        pgrep -x emacs > /dev/null && pkill emacs
        emacs --daemon
    }
}

for i in fff ranger nnn noice; { has ${f} && { a {fm,mf}=${f}; break; }; }
for i in doas sudo; { has ${i} && { a sudo="${i} "; break; }; }

unset i

has python3 && a {py,python}='python3'
has perl    && a pl='perl'

a {mkci,mkic}='make clean install'
has mk || a mk='make'
a mki='make install'
a mka='make all'
a mku='make uninstall'
a mkc='make clean'

has mupdf && a mpf='mupdf'
has zathura && a mpf='zathura'
a aliases='alias'
a {quit,:q,:q!}='exit'

a df='df -h'
a du='du -h'
a mv='mv -iv'
a rm='rm -v'
a rmd='rm -r'
a cp='cp -rv'
a ln='ln -sf'
a mkf='touch'
a mkd='mkdir -pv'
a free='free -m'
a rmf='rm -rf'
a fc-cache='fc-cache --verbose'
a grep='grep -i'
a su='su -'
a {sl,ls}='ls -F'
a reboot='sudo reboot'
a poweroff='sudo poweroff'
a shutdown='sudo shutdown'
a datenow='date +"%a %d %b %Y %H:%M"'

a {cd..,c..,c.}='cd ..'
a {cl,cle}='clear'

a gH="cd ${HOME}"
a gB="cd ${HOME}/bin"
a gS="cd ${HOME}/usr/src"
a gR="cd ${HOME}/usr/repos"
a gT="cd ${HOME}/tmp"
a gW="cd ${HOME}/var/pictures/wallpapers"
a gE="cd ${HOME}/etc"
a gD="cd ${HOME}/usr/doc"
a gd="cd ${HOME}/var/downloads"
a gC="cd ${HOME}/var/cache"
a gP="cd ${HOME}/usr/ports"
a gM="cd ${HOME}/var/music"
