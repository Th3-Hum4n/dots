#!/bin/ksh
alias a='alias'
a cmd='command'

find-font() {
    [[ "${1}" ]] &&
        fc-list | grep -i "${1}"
}

c() {
    [[ ! "${1}" ]] && { clear; return 0; }
    local p
    for p in "${@}" "${@}*" "*${@}" "*${@}*"; {
        if [[ -f "${p}" ]]; then
            case `file -ib "${p}"` {
            (*pdf*)   zathura "${p}" ;;
            (*image*) meh     "${p}" ;;
            (*video*) mpv     "${p}" ;;
            (*zip*)   upkp    "${p}" ;;
            (*)       cat     "${p}" ;;
            }
            return 0
        elif [[ -d "${p}" ]]; then
            cd "${p}"; return 0
        fi
    }
    print 'error: no such file or dir' ${1}
}

v() {
    has emacsclient && pgrep -x emacs > /dev/null && {
        xembed --parent-id emacsclient -c "${@}"
        return 0
    }

    vi "${@}"
}

resource() {
    . ${HOME}/etc/{aliases,kshrc}
}

resxhkd() {
    pgrep -x sxhkd > /dev/null && pkill -9 sxhkd
    cat ${HOME}/etc/xorg.d/sxhkdrc-base ${HOME}/etc/xorg.d/${WM}.d/sxhkdrc > /tmp/sxhkdrc
    sxhkd -c /tmp/sxhkdrc &
}

conf() {
    [[ ! -d "${HOME}/usr/repos/home" ]] && return 1
    g() { git --git-dir="${HOME}/usr/repos/home" --work-tree="${HOME}" "${@}"; }

    case ${1} {
    (commit) shift; g commit --interactive -m "${@}" ;;
    (push) g push origin master ;;
    (list) g ls-tree -r HEAD --name-only | less ;;
    (update-patches) g add "${HOME}/etc/prog.d/patches/"* ;;
    (*) g "${@}" ;;
    }

    unset -f g
}

rmd() {
    for i; {
        [[ -d "${i}" ]] &&
            rm -r "${i}" ||
                printf 'error: %s not a directory\n' ${i##*/}
    }
}

has git && {
    git() {
        case ${1} {
        (ignore-get)
            wget -O gitignore \
                https://raw.githubusercontent.com/github/gitignore/master/${2}.gitignore
            ;;
        (squash)
            local cnf
            print -n 'do you want to continue? '
            read -r cnf
            [[ "${cnf:0:1}" != 'y' ]] && return 0
            local n=${2}
            shift 2
            local msg="${@}"
            cmd git reset --soft HEAD~${n}
            cmd git commit -m "${msg}"
            ;;
        (add)
            [[ "${2}" = @('.'|'*') ]] && {
                print no
                return 0
            }
            cmd git "${@}"
            ;;
        (com*)
            shift
            local fnl="${@}"
            [[ "${2}" = "-i" ]] && {
                shift
                fnl='${@} --interactive'
            }
            cmd git commit -m "${fnl}"
            ;;
        (clone)
            local fnl="${@}"
            [[ "${2}" != *viz* ]] && fnl="${@} --depth 1"
            cmd git ${fnl}
            ;;
        (push)
            cmd git push origin `cmd git rev-parse --abbrev-ref HEAD`
            ;;
        (*)
            cmd git "${@}"
            ;;
        }
    }
    a diff='cmd git diff'
}

has emacs && {
    remacs() {
        pgrep -x emacs > /dev/null && pkill emacs
        emacs --daemon
    }
}

has mpv && has piko && {
    yt() {
        piko "${1}" -stdout | mpv -
    }
}

has python3 && a {py,python}='python3'
has racket  && a rkt='racket'
has perl    && a pl='perl'
has mupdf   && a mpf='mupdf'
has zathura && a mpf='zathura'
has noice   && a {fm,mf}='noice'
has mk      || a mk='make'
has doas    && a doas='doas '

a {mkci,mkic}='make clean install'
a mki='make install'
a mka='make all'
a mku='make uninstall'
a mkc='make clean'
a rsc='resource'
a aliases='alias'
a {quit,:q,:q!}='exit'

a df='df -h'
a du='du -h'
a mv='mv -iv'
a rm='rm -v'
a cp='cp -rv'
a ln='ln -sf'
a mkf='touch'
a mkd='mkdir -pv'
a free='free -h'
a rmf='rm -rf'
a fc-cache='fc-cache --verbose'
a grep='grep -i'
a su='su -'
a {sl,ls}=' ls -AF'
a reboot='doas reboot'
a poweroff='doas poweroff'
a shutdown='doas shutdown'
a datenow='date +"%a %d %b %Y %H:%M"'

a {cd..,c..,c.}='cd ..'
a {cl,cle,clea}='clear'

a gH="cd ${HOME}"
a gB="cd ${HOME}/bin"
a gS="cd ${HOME}/usr/src"
a gR="cd ${HOME}/usr/repos"
a gT="cd ${HOME}/tmp"
a gW="cd ${HOME}/var/pictures/wallpapers"
a gE="cd ${HOME}/etc"
a gD="cd ${HOME}/usr/doc"
a gd="cd ${HOME}/var/downloads"
a gC="cd ${HOME}/var/cache"
a gP="cd ${HOME}/usr/ports"
a gM="cd ${HOME}/var/music"
