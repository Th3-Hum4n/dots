#!/bin/mksh
trap 'pkill -P $$' EXIT

init() {
    remkd /tmp/info/bar

    while ! pgrep dwm > /dev/null ; do
        sleep 0.1
    done

    read -r h < /tmp/info/dwm/bar/height

    [[ ${h} -eq 0 ]] && exit

    local sh=$(res -h)
    x=0
    y=$((sh - h))
    w=$(res -w)

    vol -i 0
}

wksp() {
    local i=1
    read -r num < /tmp/info/dwm/tag/num
    read -r cur < /tmp/info/dwm/tag/current
    while [[ ${i} -le ${num} ]]; do
        # check if occupied
        read -r state < /tmp/info/dwm/tag/${i}
        case ${state} {
        (1) ws='x ';;
        (2) ws='@ ';;
        (*) ws='+ ';;
        }

        [[ ${cur} -eq ${i} ]] && ws='* '
        buffer="${buffer}${ws}"
        i=$((i + 1))
    done
    unset i state cur ws
    echo -n "${buffer}"
}

title() {
    shorten() {
        echo -n "${@}" | cut -c1-40
    }

    local winn="$(xdotool getactivewindow getwindowname | tr '[:upper:]' '[:lower:]')"
    local formatname=""

    case ${winn} in
    (*" - chromium"*) winn="chromium: ${winn/- chromium//}";;
    (*" - firefox"*) winn="ff: ${winn/- firefox//}";;
    esac

    [[ ${#winn} -ge 40 ]] && winn="`shorten "${winn}"`..."
    [[ -n "${winn}" ]] && formatname=" ${winn} "
    echo "${formatname}"
}


batd() {
    [[ `bat -s` = "Unknown" ]] && return; [[ `bat -s` = "Charging" ]] && ind="^"
    while echo "`bat -p`%${ind}" > /tmp/info/bar/bat; do
        sleep 5
    done
}

init; batd

while echo                                                               \
         "%{l}  $(date +'%a' | tr '[:upper:]' '[:lower:]' | cut -c1-2)"  \
         "$(title)"                                                      \
         "%{c}"                                                          \
         "$(wksp)"                                                       \
         "%{r}$(< /tmp/info/bar/bat 2> /dev/null)"                       \
         "$(< /tmp/info/vol/cur)% "                                      \
         "$(date +'%H:%M')"                                              \
         "$(date +'%b %d' | tr '[:upper:]' '[:lower:]')  "
    do sleep 0.5; done 2> /dev/null                                      |
lemonbar -db                                                             \
         -f 'ttyp0:pixelsize=9'                                          \
         -g ${w}x${h}+${x}+${y}                                          \
         -n bar                                                          \
         -B '#ffffff'                                                    \
         -F $(< /tmp/info/dwm/colors/normfg)                             > /dev/null 2>&1
