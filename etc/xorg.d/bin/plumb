#!/bin/sh
# try to act like plan9's plumber

THING=`xout`
DN='/tmp/plumb'

[ -f ${DN} ] && rm ${DN}

DIRS="${HOME}/bin ${HOME}/etc/xorg.d ${HOME}/etc/emacs.d \
    ${HOME}/usr/doc ${HOME}/usr/share ${HOME}/usr/src"
RLPATH=""

less() {
    exec st -g 80x40+100+100 -e less ${1}
}

open() {
    mt=`file -ib ${1}`
    case ${mt%%;*} in
    (image/*)        exec meh     ${1} ;;
    (text/x-*script)      less    ${1} ;;
    (text/plain)          less    ${1} ;;
    (app*/pdf)       exec zathura ${1} ;;
    (app*/x-*sh)          less    ${1} ;;
    (audio/*)        exec mpv     ${1} ;;
    (video/*)        exec mpv     ${1} ;;
    esac
}

http() {
    content=`curl -I ${THING} | grep Content-Type | tr -d '\r'`
    case `echo ${content##*:} | strings` in
    (text/html) exec palemoon --new-window "${THING}" ;;
    (audio/*)   exec mpv "${THING}"                   ;;
    (video/*)   exec mpv "${THING}"                   ;;
    (*)         wget -O ${DN} "${THING}"; open ${DN}  ;;
    esac
}

man() {
    name=${THING%%\(*}
    sect=${THING##*\(}
    sect=${sect%%\)*}

    apropos -f ${name} > /dev/null
    [ ${?} -ne 0 ] && return 1
    exec st -g 80x40+100+100 -e man ${sect} ${name}
}

# TODO: cache is_file and is_dir stuff
is_file() {
    [ -f "${1}" ] && { RLPATH="${1}"; return 0; }
    f=`find ${DIRS} -type f -iname "*${1}*"`
    [ -n "${f}" ] && { RLPATH="${f}"; unset f; return 0; }
    unset f
    return 1
}

is_dir() {
    [ -d "${1}" ] && { RLPATH="${1}"; return 0; }
    d=`find ${DIRS} -type d -iname "*${1}*"`
    [ -n "${d}" ] && { RLPATH="${d}"; unset d; return 0; }
    unset d
    return 1
}

other() {
    if echo "${THING}" | grep -e '[a-zA-z]\([0-9a-z]\)' > /dev/null; then
        man
        [ ${?} -eq 1 ] && palemoon --new-window --search "${THING}"
    elif is_file "${THING}"; then
        open "${RLPATH}"
    elif is_dir "${THING}"; then
        st -e sh -c "cd ${RLPATH} && ksh"
    else
        palemoon --new-window --search "${THING}"
    fi
}

case `echo ${THING} | strings` in
(*//youtube.com/watchv?=*)
    ytdl -o - "${THING}" | mpv -
    ;;
(http://*|https://*)
    http
    ;;
(*)
    other
    ;;
esac
