diff --git a/config.def.h b/config.def.h
index defa426..62dafd7 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,20 +1,37 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const char font[]        = "monospace:size=9";
-static const char* normbgcolor  = "#222222";
-static const char* normfgcolor  = "#cccccc";
-static const char* selbgcolor   = "#555555";
-static const char* selfgcolor   = "#ffffff";
-static const char* urgbgcolor   = "#111111";
-static const char* urgfgcolor   = "#cc0000";
-static const char before[]      = "<";
-static const char after[]       = ">";
-static const char titletrim[]   = "...";
-static const int  tabwidth      = 200;
+static       char font[]        = "monospace:size=9";
+static       char* normbgcolor  = "#222222";
+static       char* normfgcolor  = "#cccccc";
+static       char* selbgcolor   = "#555555";
+static       char* selfgcolor   = "#ffffff";
+static       char* urgbgcolor   = "#111111";
+static       char* urgfgcolor   = "#cc0000";
+static       char before[]      = "<";
+static       char after[]       = ">";
+static       char titletrim[]   = "...";
+static       int  tabwidth      = 200;
 static const Bool foreground    = True;
 static       Bool urgentswitch  = False;
 
+/*
+ * Xresources preferences to load at startup
+ */
+ResourcePref resources[] = {
+        { "font",         STRING,   &font },
+        { "normbgcolor",  STRING,   &normbgcolor },
+        { "normfgcolor",  STRING,   &normfgcolor },
+        { "selfgcolor",   STRING,   &selfgcolor },
+        { "selbgcolor",   STRING,   &selbgcolor },
+        { "urgbgcolor",   STRING,   &urgbgcolor },
+        { "urgfgcolor",   STRING,   &urgfgcolor },
+        { "before",       STRING,   &before },
+        { "after",        STRING,   &after },
+        { "titletrim",    STRING,   &titletrim },
+        { "tabwidth",     INTEGER,  &tabwidth },
+};
+
 /*
  * Where to place a new tab when it is opened. When npisrelative is True,
  * then the current position is changed + newposition. If npisrelative
diff --git a/tabbed.c b/tabbed.c
index ff3ada0..6df37a8 100644
--- a/tabbed.c
+++ b/tabbed.c
@@ -16,6 +16,7 @@
 #include <X11/Xutil.h>
 #include <X11/XKBlib.h>
 #include <X11/Xft/Xft.h>
+#include <X11/Xresource.h>
 
 #include "arg.h"
 
@@ -50,6 +51,13 @@
 enum { ColFG, ColBG, ColLast };       /* color */
 enum { WMProtocols, WMDelete, WMName, WMState, WMFullscreen,
        XEmbed, WMSelectTab, WMLast }; /* default atoms */
+enum restype { STRING = 0, INTEGER = 1 }; /* xresources entry type */
+
+typedef struct {
+	char *name;
+	enum restype type;
+	void *dst;
+} ResourcePref;
 
 typedef union {
 	int i;
@@ -135,6 +143,8 @@ static void updatenumlockmask(void);
 static void updatetitle(int c);
 static int xerror(Display *dpy, XErrorEvent *ee);
 static void xsettitle(Window w, const char *str);
+static int xresload(XrmDatabase db, char *name, enum restype rtype, void *dst);
+static void confinit(void);
 
 /* variables */
 static int screen;
@@ -1255,6 +1265,54 @@ xsettitle(Window w, const char *str)
 	}
 }
 
+int
+xresload(XrmDatabase db, char *name, enum restype rtype, void *dst)
+{
+	char **sdst = dst;
+	int *idst   = dst;
+
+	char fullname[256], fullclass[256];
+	char *type;
+	XrmValue ret;
+
+	snprintf(fullname, sizeof(fullname), "%s.%s",
+	         wmname ? wmname : "tabbed", name);
+	snprintf(fullclass, sizeof(fullclass), "%s.%s",
+	         "Tabbed", name);
+	fullname[sizeof(fullname) - 1] = fullclass[sizeof(fullclass) - 1] = '\0';
+
+	XrmGetResource(db, fullname, fullclass, &type, &ret);
+	if (ret.addr == NULL || strncmp("String", type, 64))
+		return 1;
+
+	switch (rtype) {
+	case STRING:
+		*sdst = ret.addr;
+		break;
+	case INTEGER:
+		*idst = strtoul(ret.addr, NULL, 10);
+		break;
+	}
+	return 0;
+}
+
+void
+confinit(void)
+{
+	char *resm;
+	XrmDatabase db;
+	ResourcePref *p;
+
+	XrmInitialize();
+	resm = XResourceManagerString(dpy);
+	if (!resm)
+		return;
+
+	db = XrmGetStringDatabase(resm);
+	for (p = resources; p < resources + LENGTH(resources); p++)
+		xresload(db, p->name, p->type, p->dst);
+}
+
 void
 usage(void)
 {
@@ -1344,6 +1402,8 @@ main(int argc, char *argv[])
 	if (!(dpy = XOpenDisplay(NULL)))
 		die("%s: cannot open display\n", argv0);
 
+	confinit();
+
 	setup();
 	printf("0x%lx\n", win);
 	fflush(NULL);
