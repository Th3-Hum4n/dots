find-font() {
	[[ -n "${1}" ]] &&
		fc-list | grep -i "${1}"
}

_c() {
	local p
	for p in "${@}" ${@}* *${@} *${@}*; {
		if [[ -f "${p}" ]]; then
			case `file -ib "${p}"` {
			*pdf*)   zathura "${p}" ;;
			*image*) meh "${p}"     ;;
			*audio*)                ;&
			*video*) mpv "${p}"     ;;
			*zip*)   upkp "${p}"    ;;
			*)       cat  "${p}"    ;;
			}
			return 0
		elif [[ -d "${p}" ]]; then
			cd "${p}"; return 0
		fi
	}
	print 'error: no such file or dir' ${p}
}

c() { [[ ${#} -eq 0 ]] && clear; for i; { _c "${i}"; }; }

l() {
	[[ -d "${1}" ||  -z "${1}" ]] && ls "${1:-.}"
	[[ -f "${1}" ]] && less "${1}"
}

resource() . ${HOME}/lib/kshrc;

conf() {
	[[ -d "${HOME}/opt/repos/home" ]] || return 1
	g() git --git-dir="${HOME}/opt/repos/home" --work-tree="${HOME}" "${@}";

	case ${1} {
	com*) shift; g commit -m "${@}"   ;;
	push)        g push origin master ;;
	list)        g ls-files | less    ;;
	*)           g "${@}"             ;;
	}

	unset -f g
}

rmd() {
	for i; {
		[[ -d "${i}" ]] &&
			rm -r "${i}" ||
				printf 'error: %s not a directory\n' ${i##*/}
	}
}

urm() {
	local d="${_}"
	[[ -d "${d}" ]] || return 1
	for f; {
		[[ "${f}" != "${d}" ]] &&
			rm "${d}/${f##*/}"
	}
}

iff() {
	if eval ${1} >/dev/null; then
		echo "${2}"
	else
		echo "${3}"
	fi
}

map() {
	while read -r l; do
		${@} "${l}"
	done </dev/stdin
}

filter() {
	while read -r l; do
		${@} "${l}" && echo "${l}"
	done </dev/stdin
}

ormap() {
	while read -r l; do
		${@} "${l}" && return 0
	done </dev/stdin
	return 1
}

andmap() {
	while read -r l; do
		${@} "${l}" || return 1
	done </dev/stdin
	return 0
}

rsfile() print ${1%.*} | tr 'A-Z .' 'a-z_';
unix2dos() for i; { sed -i -e 's/\r*$/\r/' "${i}"; };
dos2unix() for i; { sed -i -e 's/\r//'     "${i}"; };
